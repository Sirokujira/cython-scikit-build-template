# 'sudo' is enabled automatically by the 'apt' addon below.
# sudo: false 
# sudo: required

language: python            # this works for Linux but is an error on macOS or Windows

# https://docs.travis-ci.com/user/languages/python/#running-python-tests-on-multiple-operating-systems
# https://docs.travis-ci.com/user/reference/xenial#python-support
# https://scikit-build.readthedocs.io/en/latest/installation.html
matrix:
  include:
  - name: Python 2.7 on Xenial
    dist: xenial
    python: '2.7'
    compiler: gcc
    # addons:
    #   apt:
    #     sources:
    #     # - ubuntu-toolchain-r-test
    #     # - docker-xenial
    #     packages:
    #     - build-essential
    env:
    - OS_VERSION="xenial"
  - name: Python 3.5 on Xenial
    dist: xenial
    python: '3.5'
    compiler: gcc
    # addons:
    #   apt:
    #     sources:
    #     - ubuntu-toolchain-r-test
    #     packages:
    #     - build-essential
    env:
    - OS_VERSION="xenial"
  - name: Python 3.6 on Xenial
    dist: xenial
    python: '3.6'
    compiler: gcc
    # addons:
    #   apt:
    #     sources:
    #     - ubuntu-toolchain-r-test
    #     packages:
    #     - openni2-utils
    #     - build-essential
    env:
    - OS_VERSION="xenial"
  - name: Python 3.7 on Xenial
    dist: xenial
    python: '3.7'
    compiler: gcc
    # addons:
    #   apt:
    #     sources:
    #     - ubuntu-toolchain-r-test
    #     packages:
    #     - openni2-utils
    #     - build-essential
    env:
    - OS_VERSION="xenial"
  # - name: Python 2.7 on Xenial(clang)
  #   dist: xenial
  #   python: '2.7'
  #   compiler: clang
  #   addons:
  #     apt:
  #       sources:
  #       - ubuntu-toolchain-r-test
  #   env:
  #   - OS_VERSION="xenial"
  # - name: Python 3.5 on Xenial(clang)
  #   dist: xenial
  #   python: '3.5'
  #   compiler: clang
  #   addons:
  #     apt:
  #       sources:
  #       - ubuntu-toolchain-r-test
  #       packages:
  #       - openni2-utils
  #   env:
  #   - OS_VERSION="xenial"
  # - name: Python 3.6 on Xenial(clang)
  #   dist: xenial
  #   python: '3.6'
  #   compiler: clang
  #   addons:
  #     apt:
  #       sources:
  #       - ubuntu-toolchain-r-test
  #       packages:
  #       - openni2-utils
  #   env:
  #   - OS_VERSION="xenial"
  # - name: Python 3.7 on Xenial(clang)
  #   dist: xenial
  #   python: '3.7'
  #   compiler: clang
  #   addons:
  #     apt:
  #       sources:
  #       - ubuntu-toolchain-r-test
  #       packages:
  #       - openni2-utils
  #   env:
  #   - OS_VERSION="xenial"
  - name: Python 2.7.16 on macOS
    os: osx
    language: generic
    env:
    - PYTHON_VERSION=2.7.16
    - PYENV_ROOT=~/.pyenv
    - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
  - name: Python 3.5.7 on macOS
    os: osx
    language: generic
    env:
    - PYTHON_VERSION=3.5.7
    - PYENV_ROOT=~/.pyenv
    - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
  - name: Python 3.6.8 on macOS
    os: osx
    language: generic
    env:
    - PYTHON_VERSION=3.6.8
    - PYENV_ROOT=~/.pyenv
    - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
  - name: Python 3.7.3 on macOS
    os: osx
    language: generic
    env:
    - PYTHON_VERSION=3.7.3
    - PYENV_ROOT=~/.pyenv
    - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
cache:
  - pip
  - ccache


install:
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - pip install -r requirements-test.txt
  - pip install wheel
  - pip install twine
  # coveralls
  # - pip install pytest
  # - pip install coveralls
  # codecov
  # - pip install pytest-cov
  # - pip install codecov

  - if [ ${TRAVIS_OS_NAME} = "osx" ]; then
      python setup.py build_ext -i --plat-name macosx-10.9-x86_64;
      python setup.py bdist_wheel --plat-name macosx-10.9-x86_64;
    else
      python setup.py build_ext -i;
      python setup.py install;
      python setup.py bdist_wheel;
    fi

# command to run tests
script:
  # - nosetests --verbose
  # - coverage run --parallel-mode tests/pi_calculator_test.py
  # - coverage run --parallel-mode tests/rect_test.py
  - nosetests --with-coverage --cover-erase --cover-package=scikit-build-template --verbose
  # - py.test --cov pcl
  # examples
  # - python examples/CallTest.py

after_success:
  # coveralls.io
  - coverage combine
  - coveralls
  # codecov.io
  # - codecov

deploy:
  provider: pypi
  user: sirokujira
  password:
    secure: k0rnD6VDjBBU7ycQdsWFflvSVBrpxuHEJinkdRSJtV6+swcwGaLhSgwPZICe7UTaoiVjzD2rVP/Bfy3vZleVyhzxYUb7Nph4/Mdk4NbyWqSmADaYDhk6ZhRGQm8XXyrcncun02pNH7Rz7afnslY1Dq/o2d+sO0oK5pWQuIXIKlo7F51Y6r5KzqyZiCkmmBYUMrW/oh3faT/HZl8Mc3cH+W6FRAeSWX3Av50nJMU1FbRg4dZf99huGKiTsqVFF3DtT/QGDm3NCEUiHTSSkqgCH4Bm9XnnpBTFj415uP1yBTqEjkyIhY+dpAvWpxireXZs/LOckUxF1+BJjuGEKNU4ahWFWTS3DkRkkmYmuyV4aFBLKfS9CGv2JDMmO37hQp8oR9CdQLmufGRHCTEw5nU5/NSyg1ebbtHxQojXd7S4/ITxWCnAoRLQgIWGSyjjOCnujA9R8KMeqebp+5V6C+FSUQROVmk/JNJLEfNy+ZZgtV/nqnkHRGJRaMFuYE4xBxY//5UiuW2z6AIpwPfUO0whTBd+AZ6RiXMJyauU1oToRh/lhSjh6c681kb/7oId5FuyFPrOd8Re2bPzbzefmD5JUbnt3SoGrB2CdEk0Q989EFSQlq+np2UaYx0D6ki6zXjtPSx4mPJ3qUlXCtQN2mvFqc2YaUSaLFnwDeJBS/cMKSE=
  on:
    # test
    branch: master
    distributions: "sdist bdist_wheel"
    skip_existing: true
