name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 6
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-2019]
        #platform: [ubuntu-latest, macos-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]
        #python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    # Install Microsoft Visual C++ Compiler for Python 2.7
    # http://aka.ms/vcpython27
    - name: Install MSVC++ for Python 2.7
      if: startsWith(matrix.platform, 'windows-') && matrix.python-version == 2.7
      run: choco install vcpython27 -y
    - name: Install Visual C++ Build Tools 2015
      if: startsWith(matrix.platform, 'windows-')
      run: choco install -y VisualCppBuildTools
    - name: Install Visual Studio 2017
      if: startsWith(matrix.platform, 'windows-')
      run: |
        choco install -y windows-sdk-10.1
        choco install -y visualstudio2017-installer
        choco install -y microsoft-build-tools
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -r requirements.txt
        python -m pip install tox tox-gh-actions
    - name: build dependencies(other)
      run: python setup.py develop
      if: "!startsWith(matrix.platform, 'windows-')"
    - uses: ilammy/msvc-dev-cmd@v1.4.0
      #with:
      #  arch: ${{ matrix.architecture }}
      #  #sdk: 10.0.16299.0
      #  ##toolset: 14.11
      #  #toolset: 14.26
      if: "startsWith(matrix.platform, 'windows-')"
    - name: build dependencies(win)
      run: |
        #choco install windows-sdk-10.0
        python setup.py develop -G "NMake Makefiles"
        #python setup.py develop -G "Visual Studio 16 2019" -A x64
      if: "startsWith(matrix.platform, 'windows-')"
    - name: test
      run: |
        python -m pip install -r requirements-test.txt -q
        nose2 --with-coverage

  lint:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
        with:
          python-version: 3.8
    - name: Lint with flake8
      run: |
        python -m pip install -U pip
        python -m pip install -r requirements.txt
        python setup.py develop
        python -m pip install -r requirements-codecheck.txt -q
        flake8
        flake8 --config=.flake8.cython
    - name: Lint with pep8
      run: |
        autopep8 -r . --diff | tee check_autopep8
        test ! -s check_autopep8
  #  - name: Test with tox
  #    run: tox
  #    # We need to fix the following error to use Python 3.5 on Windows
  #    # pyconfig.h(243): fatal error C1083: Cannot open include file: 'basetsd.h': No such file or directory
  #    #  if: "!startsWith(matrix.platform, 'windows-') && matrix.python-version != 3.5"
  #    #  env:
  #    #    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  #    #    # This is for avoiding the error like this:
  #    #    # pyconfig.h(68): fatal error C1083: Cannot open include file: 'io.h': No such file or directory
  #    #    INCLUDE: c:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/SDK/ScopeCppSDK/SDK/include/ucrt
  #  - name: Test with pytest
  #    run: |
  #      python pytest tests --cov-report=term-missing --cov-report=html
  #    uses: actions/upload-artifact@master
  #    with:
  #      name: coverage
  #      path: htmlcov
  coverage:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.8
      uses: actions/setup-python@master
      with:
        python-version: 3.8
    - name: Generate coverage report
      run: |
        python -m pip install -U pip
        python -m pip install -r requirements.txt
        python setup.py develop
        python -m pip install -r requirements-test.txt -q
        #nose2 --with-cov --cov-config .coveragerc
        nose2 --with-coverage
        #nose2 --with-cov --cov-report xml --cov-report annotate
        #coverage run tests.py
        coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
    #- name: Upload coverage to CodeClimate
    #  uses: paambaati/codeclimate-action@v2.5.7
    #  env: 
    #    CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TOKEN }}
    #  with: 
    #    coverageCommand: |
    #      node2 --with-coverage
    #      coverage xml
    #    debug: true 

