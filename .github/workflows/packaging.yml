name: Packaging

on: [push]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install -r requirements.txt
    - name: Create packages
      run: python setup.py sdist
    - uses: actions/upload-artifact@v1
      with:
        name: scikit-build-template
        path: dist

  build_wheel_linux:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install -r requirements.txt
    - name: Create packages
      run: |
        python -m pip install pip-custom-platform
        pip-custom-platform wheel --platform ${{matrix.platform }} temp
        #python setup.py bdist_wheel --platform ${{ matrix.platform }}
    - uses: actions/upload-artifact@v1
      with:
        name: scikit-build-template
        path: dist
#   #- name: Publish distribution ðŸ“¦  to Test PyPI
#   #    uses: pypa/gh-action-pypi-publish@master
#   #    with:
#   #      password: ${{ secrets.test_pypi_password }}
#   #      repository_url: https://test.pypi.org/legacy/
#   #- name: Publish distribution ðŸ“¦  to PyPI
#   #  if: startsWith(github.ref, 'refs/tags')
#   #  uses: pypa/gh-action-pypi-publish@master
#   #  with:
#   #    password: ${{ secrets.pypi_password }}

  #build_wheel_linux:
  #  runs-on: ${{ matrix.platform }}
  #  strategy:
  #    matrix:
  #      platform: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
  #  steps:
  #  - name: Install dependencies
  #    run: python -m pip install -r requirements.txt
  #  - uses: actions/checkout@v1
  #  - name: Build manylinux1/manylinux2010 wheel
  #    run: |
  #      docker info
  #      ./scripts/build_manylinux_wrapper.sh
  #  - uses: actions/upload-artifact@master
  #    with:
  #      name: scikit-build-template
  #      path: dist/wheelhouse
  #  - name: Publish distribution ðŸ“¦ to Test PyPI
  #    uses: pypa/gh-action-pypi-publish@master
  #    with:
  #      password: ${{ secrets.test_pypi_password }}
  #      repository_url: https://test.pypi.org/legacy/
  #  - name: Publish distribution ðŸ“¦ to PyPI
  #    if: startsWith(github.ref, 'refs/tags')
  #    uses: pypa/gh-action-pypi-publish@master
  #    with:
  #      password: ${{ secrets.pypi_password }}

  build_wheel_macos:
    runs-on: macos-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install -r requirements.txt
    - name: Create packages
      run: python setup.py bdist_wheel
    - name: delocate for macOS wheels
      run: |
        python -m pip install --upgrade delocate -q
        delocate-addplat --rm-orig \
          -p macosx_10_15_x86_64 \
          -p macosx_10_14_x86_64 \
          -p macosx_10_13_x86_64 \
          -p macosx_10_12_x86_64 \
          -p macosx_10_11_x86_64 \
          -p macosx_10_10_x86_64 \
          dist/*.whl
    - uses: actions/upload-artifact@master
      with:
        name: scikit-build-template
        path: dist

  # build_wheel_windows:
  #   env:
  #     VCVARS64: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat
  #     #           C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat
  #     # This is for avoiding the error like this:
  #     # pyconfig.h(68): fatal error C1083: Cannot open include file: 'io.h': No such file or directory
  #     INCLUDE: c:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/SDK/ScopeCppSDK/SDK/include/ucrt
  #   runs-on: windows-2019
  #   strategy:
  #     max-parallel: 4
  #     matrix:
  #       python-version: [2.7, 3.6, 3.7, 3.8]
  #       #architecture: ['x86', 'x64']
  #       architecture: ['x64']
  #       #environment_script: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat
  # 
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Set up Python ${{ matrix.python-version }} (${{ matrix.architecture }})
  #     uses: actions/setup-python@master
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #       architecture: ${{ matrix.architecture }}
  #   # Install Microsoft Visual C++ Compiler for Python 2.7
  #   # http://aka.ms/vcpython27
  #   - name: Install MSVC++ for Python 2.7
  #     if: matrix.python-version == 2.7
  #     run: choco install vcpython27 -y
  #   - name: Install dependencies
  #     run: python -m pip install -r requirements.txt
  #   - uses: ilammy/msvc-dev-cmd@v1
  #     with:
  #       arch: ${{ matrix.architecture }}
  #       sdk: 10.0.16299.0
  #       toolset: 14.11
  #   - name: Create packages
  #     run: |
  #       choco install windows-sdk-10.0
  #       echo ${INCLUDE}
  #       python setup.py bdist_wheel -G "NMake Makefiles"
  #   - uses: actions/upload-artifact@master
  #     with:
  #       name: scikit-build-template
  #       path: dist

  build:
    needs:
      - build_sdist
      - build_wheel_linux
      - build_wheel_macos
      # - build_wheel_windows
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: scikit-build-template
        path: dist
    - name: Show result
      run: ls -l dist
