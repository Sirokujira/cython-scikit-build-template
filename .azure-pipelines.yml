jobs:
  - job: ubuntu1604
    displayName: Ubuntu 16.04 Build
    timeoutInMinutes: 0
    pool:
      vmImage: 'Ubuntu 16.04'
    strategy:
      matrix:
        Python27:
          python.version: '2.7'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
        Python35:
          python.version: '3.5'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
        Python36:
          python.version: '3.6'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
        Python37:
          python.version: '3.7'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'
      - script: |
          pip install -r requirements.txt
          pip install -r requirements-test.txt
        displayName: 'Install Dependencies'
      - script: |
          python setup.py build_ext -i
          python setup.py install
        displayName: 'Build Library'
      - script: nose2 ./tests/test_rect.py --with-coverage
        displayName: 'Run Unit Tests'
  - job: osx
    displayName: macOS High Sierra
    timeoutInMinutes: 0
    pool:
      vmImage: 'macOS-10.13'
    strategy:
      matrix:
        Python27:
          python.version: '2.7'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
        Python35:
          python.version: '3.5'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
        Python36:
          python.version: '3.6'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
        Python37:
          python.version: '3.7'
          CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'
      - script: |
          pip install -r requirements.txt
          pip install -r requirements-test.txt
        displayName: 'Install Dependencies'
      - script: |
          python setup.py build_ext -i
          python setup.py install
        displayName: 'Build Library'
      - script: nose2 ./tests/test_rect.py --with-coverage
        displayName: 'Run Unit Tests'
  #- job: vs2017
  #  displayName: Windows VS2017 Build
  #  timeoutInMinutes: 0
  #  pool:
  #    vmImage: 'vs2017-win2016'
  #  strategy:
  #    matrix:
  #      #x86_Python27:
  #      #  PLATFORM: 'x86'
  #      #  ARCHITECTURE: 'x86'
  #      #  GENERATOR: 'Visual Studio 15 2017'
  #      #  python.version: '2.7'
  #      #  CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #      x86_Python35:
  #        PLATFORM: 'x86'
  #        ARCHITECTURE: 'x86'
  #        GENERATOR: 'Visual Studio 15 2017'
  #        python.version: '3.5'
  #        CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #      x86_Python36:
  #        PLATFORM: 'x86'
  #        ARCHITECTURE: 'x86'
  #        GENERATOR: 'Visual Studio 15 2017'
  #        python.version: '3.6'
  #        CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #      x86_Python37:
  #        PLATFORM: 'x86'
  #        ARCHITECTURE: 'x86'
  #        GENERATOR: 'Visual Studio 15 2017'
  #        python.version: '3.7'
  #        CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #      #x64_Python27:
  #      #  PLATFORM: 'x64'
  #      #  ARCHITECTURE: 'x86_amd64'
  #      #  GENERATOR: 'Visual Studio 15 2017 Win64'
  #      #  python.version: '2.7'
  #      #  CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #      x64_Python35:
  #        PLATFORM: 'x64'
  #        ARCHITECTURE: 'x86_amd64'
  #        GENERATOR: 'Visual Studio 15 2017 Win64'
  #        python.version: '3.5'
  #        CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #      x64_Python36:
  #        PLATFORM: 'x64'
  #        ARCHITECTURE: 'x86_amd64'
  #        GENERATOR: 'Visual Studio 15 2017 Win64'
  #        python.version: '3.6'
  #        CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #      x64_Python37:
  #        PLATFORM: 'x64'
  #        ARCHITECTURE: 'x86_amd64'
  #        GENERATOR: 'Visual Studio 15 2017 Win64'
  #        python.version: '3.7'
  #        CMAKE_CXX_FLAGS: '-Wall -Wextra -Wabi -O2'
  #  variables:
  #    BUILD_DIR: '$(Agent.WorkFolder)\build'
  #    VCPKG_DIR: '$(Agent.WorkFolder)\vcpkg'
  #    VCVARSALL: '%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat'
  #    CONFIGURATION: 'Release'
  #  steps:
  #    - template: azure-pipelines/windows-install-ninja.yml
  #    - task: UsePythonVersion@0
  #      inputs:
  #        versionSpec: '$(python.version)'
  #        architecture: 'x64'
  #    - script: |
  #        git clone https://github.com/microsoft/vcpkg --depth 1 %VCPKG_DIR%
  #        echo.set(VCPKG_BUILD_TYPE release)>> %VCPKG_DIR%\triplets\%PLATFORM%-windows.cmake
  #        %VCPKG_DIR%\bootstrap-vcpkg.bat
  #        %VCPKG_DIR%\vcpkg.exe version
  #      displayName: 'Bootstrap vcpkg'
  #    - script: |
  #        rem %VCPKG_DIR%\vcpkg.exe install hogefuga
  #        %VCPKG_DIR%\vcpkg.exe list
  #        pip install -r requirements.txt
  #      displayName: 'Install Dependencies'
  #    - script: |
  #        rem rmdir %VCPKG_DIR%\downloads /S /Q
  #        rem rmdir %VCPKG_DIR%\packages /S /Q
  #      displayName: 'Free up space'
  #    - script: |
  #        python setup.py build_ext -i -G"%GENERATOR%"
  #        python setup.py install -G"%GENERATOR%"
  #      displayName: 'Build Library'
  #    - script: nose2 ./tests/test_rect.py --with-coverage
  #      displayName: 'Run Unit Tests'
